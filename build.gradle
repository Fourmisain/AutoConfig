buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

plugins {
    id("maven-publish")
    id("java")
    id("java-library")
    id("com.palantir.git-version") version "0.11.0"
    id("com.jfrog.bintray") version "1.8.4"
    id("com.github.johnrengelman.shadow") version "4.0.4"
}

apply plugin: 'net.minecraftforge.gradle'

sourceCompatibility = targetCompatibility = 1.8

archivesBaseName = modJarBaseName
version = modVersion
group = modMavenGroup

configurations {
    shadow
}

minecraft {
    mappings channel: 'snapshot', version: project.mcp_mappings
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            mods {
                examplemod {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven { url "https://dl.bintray.com/shedaniel/yarn2srg" }
    maven { url "https://dl.bintray.com/shedaniel/cloth-config-2" }
}

jar {
    from "LICENSE"
    
    manifest {
        getAttributes()["FMLModType"] = "LIBRARY"
    }
}

dependencies {
    minecraft("net.minecraftforge:forge:${project.minecraft_version}-${project.forge_version}")
    compile(fg.deobf("me.shedaniel.cloth:cloth-config-forge:${cloth_config_version}"))
    compile("org.jetbrains:annotations:19.0.0")
    shadow("blue.endless:jankson:1.1.+")
    implementation("blue.endless:jankson:1.1.+")
    shadow("com.moandjiezana.toml:toml4j:0.7.+") {
        exclude(group: "com.google.code.gson", module: "gson")
    }
    implementation("com.moandjiezana.toml:toml4j:0.7.+")
    implementation("net.minecraftforge.gradle:ForgeGradle:3.0.179")
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

shadowJar {
    relocate("blue.endless.jankson", "${basePackage}.shadowed.blue.endless.jankson")
    relocate("com.moandjiezana.toml", "${basePackage}.shadowed.com.moandjiezana.toml")

    setConfigurations([project.configurations.getByName("shadow")])
    classifier(null)
}

reobf {
    shadowJar {}
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier("sources")
    from sourceSets.main.allSource
}

bintray {
    user = System.getenv("BINTRAY_USER")
    key = System.getenv('BINTRAY_KEY')
    publications = ["mavenJava"]
    publish = true
    pkg {
        repo = "autoconfig1u"
        name = "autoconfig1u-forge"
        userOrg = "shedaniel"
        licenses = ["Unlicense"]
        version {
            vcsUrl = 'https://github.com/shedaniel/AutoConfig.git'
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(file("${project.buildDir}/libs/$archivesBaseName-${version}.jar")) {
                builtBy build
            }
            artifact(sourcesJar)
        }
    }

    repositories {
    }
}
